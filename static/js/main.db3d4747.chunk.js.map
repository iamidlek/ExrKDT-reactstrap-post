{"version":3,"sources":["redux/postitems/types.js","redux/postitems/reducer.js","redux/rooteStore.js","redux/store.js","components/FormComponent.js","redux/postitems/action.js","components/ModalComponent.js","components/Write.js","page/Main.js","index.js"],"names":["ADD_POST","REMOVE_POST","postItemReducer","state","action","type","payload","title","subtitle","url","text","filter","item","rootReducer","combineReducers","postItem","middleware","thunk","logger","store","createStore","applyMiddleware","mapDispatchToProps","addPost","connect","props","useState","setTitle","setSubtitle","setUrl","setText","useEffect","isClicked","setIsClicked","className","length","alt","src","row","htmlFor","sm","id","name","value","onChange","e","target","for","ModalComponent","modalHandler","centered","isOpen","color","onClick","Write","setIsOpen","curr","Main","postItems","useSelector","dispatch","useDispatch","delItem","removePost","map","tag","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.db3d4747.chunk.js","sourcesContent":["export const ADD_POST = \"ADD_POST\";\r\nexport const REMOVE_POST = \"REMOVE_POST\";\r\n","import { ADD_POST, REMOVE_POST } from \"./types\";\r\n\r\nconst postItemReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const { title, subtitle, url, text } = action.payload;\r\n      return [\r\n        ...state,\r\n        {\r\n          title: title,\r\n          subtitle: subtitle,\r\n          url: url,\r\n          text: text,\r\n        },\r\n      ];\r\n    case REMOVE_POST:\r\n      return state.filter((item) => item.title !== action.title);\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default postItemReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport postItemReducer from \"./postitems/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  postItem: postItemReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rooteStore\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middleware = [thunk, logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../redux/postitems/action\";\r\n\r\nconst FormComponent = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subtitle, setSubtitle] = useState(\"\");\r\n  const [url, setUrl] = useState(\"https://picsum.photos/256/186\");\r\n  const [text, setText] = useState(\"\");\r\n  useEffect(() => {\r\n    if (props.isClicked) {\r\n      const payload = {\r\n        title,\r\n        subtitle,\r\n        url,\r\n        text,\r\n      };\r\n      props.setIsClicked(false);\r\n      props.addPost(payload);\r\n    }\r\n  }, [props.isClicked]);\r\n\r\n  return (\r\n    <div className=\"pt-3 px-2\">\r\n      {url.length >= 29 && (\r\n        <Card>\r\n          <CardImg alt=\"Card image cap\" src={url} />\r\n        </Card>\r\n      )}\r\n      <FormGroup row className=\"border border-ligth p-3 pb-5\">\r\n        <Col>\r\n          <Label htmlFor=\"Title\" className=\"font-weight-bold\" sm={2}>\r\n            Title\r\n          </Label>\r\n          <Input\r\n            id=\"Title\"\r\n            name=\"Title\"\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n          />\r\n          <Label htmlFor=\"url\" className=\"text-muted\" sm={2}>\r\n            Subtitle\r\n          </Label>\r\n          <Input\r\n            id=\"Subtitle\"\r\n            name=\"Subtitle\"\r\n            type=\"text\"\r\n            value={subtitle}\r\n            onChange={(e) => {\r\n              setSubtitle(e.target.value);\r\n            }}\r\n          />\r\n          <Label htmlFor=\"Subtitle\" sm={2}>\r\n            FileURL\r\n          </Label>\r\n          <Input\r\n            id=\"url\"\r\n            name=\"url\"\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => {\r\n              setUrl(e.target.value);\r\n            }}\r\n          />\r\n          <FormText>\r\n            Please, enter the URL. (ex: https://picsum.photos/256/186)\r\n          </FormText>\r\n          <Label className=\"d-block mt-2\" for=\"exampleText\">\r\n            Text Area\r\n          </Label>\r\n          <Input\r\n            id=\"exampleText\"\r\n            name=\"text\"\r\n            type=\"textarea\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              setText(e.target.value);\r\n            }}\r\n          />\r\n        </Col>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addPost: (payload) => addPost(payload),\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FormComponent);\r\n","import { ADD_POST, REMOVE_POST } from \"./types\";\r\n\r\nexport const addPost = (payload) => {\r\n  return {\r\n    type: ADD_POST,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removePost = (title) => {\r\n  return {\r\n    type: REMOVE_POST,\r\n    title,\r\n  };\r\n};\r\n","import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport FormComponent from \"./FormComponent\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function ModalComponent(props) {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const submit = () => {\r\n    setIsClicked(true);\r\n  };\r\n  const cancel = () => {\r\n    props.modalHandler(false);\r\n  };\r\n  useEffect(() => {\r\n    props.modalHandler(false);\r\n  }, [isClicked]);\r\n\r\n  return (\r\n    <Modal centered className=\"mt-0\" isOpen={props.isOpen}>\r\n      <ModalHeader>오늘 어떠셨어요?</ModalHeader>\r\n      <ModalBody className=\"pb-0\">\r\n        <FormComponent isClicked={isClicked} setIsClicked={setIsClicked} />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={submit}>\r\n          올리기\r\n        </Button>\r\n        <Button onClick={cancel}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Col, Row, Container, Button } from \"reactstrap\";\r\nimport ModalComponent from \"./ModalComponent\";\r\n\r\nexport default function Write() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const modalHandler = () => {\r\n    setIsOpen((curr) => !curr);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col className=\"text-center mt-4\">\r\n          <Button className=\"w-75\" color=\"secondary\" onClick={modalHandler}>\r\n            글쓰기\r\n          </Button>\r\n          <ModalComponent isOpen={isOpen} modalHandler={setIsOpen} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import {\r\n  Container,\r\n  CardGroup,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardText,\r\n  Button,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Write from \"../components/Write\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removePost } from \"../redux/postitems/action\";\r\n\r\nconst Main = () => {\r\n  const postItems = useSelector((state) => state.postItem);\r\n  const dispatch = useDispatch();\r\n  const delItem = (title) => {\r\n    dispatch(removePost(title));\r\n  };\r\n  return (\r\n    <div>\r\n      <Write />\r\n      <Container className=\"mt-4\">\r\n        <CardGroup className=\"d-flex flex-wrap border border-ligth container-sm flex-column flex-md-row\">\r\n          {postItems.map((item) => (\r\n            <Card key={item.title} className=\"\">\r\n              <Col>\r\n                <CardImg className=\"\" alt=\"Card image cap\" src={item.url} />\r\n              </Col>\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\">{item.title}</CardTitle>\r\n                <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n                  {item.subtitle}\r\n                </CardSubtitle>\r\n                <CardText>{item.text}</CardText>\r\n                <Button onClick={() => delItem(item.title)}>Button</Button>\r\n              </CardBody>\r\n            </Card>\r\n          ))}\r\n        </CardGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Main from \"./page/Main\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <Provider store={store}>\n      <Routes>\n        <Route path=\"/ExrKDT-reactstrap-post\" element={<Main />} />\n      </Routes>\n    </Provider>\n  </BrowserRouter>,\n  // </React.StrictMode>\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}